name: Build and Release

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: GOOS=windows GOARCH=amd64 go build -o dum-flyway-validate.exe main.go

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: dum-flyway-validate.exe

  release:
    runs-on: ubuntu-latest
    permissions: write-all

    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: binaries

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release notes and description go here.
        draft: false
        prerelease: false

    - name: Debug Release
      run: |
        echo "Release ID: ${{ steps.create_release.outputs.id }}"
        echo "Release HTML URL: ${{ steps.create_release.outputs.html_url }}"
        echo "Release Upload URL: ${{ steps.create_release.outputs.upload_url }}"

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dum-flyway-validate.exe
        asset_name: dum-flyway-validate.exe
        asset_content_type: application/octet-stream
